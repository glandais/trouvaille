name: Release

on:
  push:
    branches: [ develop ]

permissions:
  contents: write
  packages: write
  actions: read
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Get version before release
      id: before
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Run semantic-release
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_AUTHOR_NAME: semantic-release-bot
        GIT_AUTHOR_EMAIL: semantic-release-bot@martynus.net
        GIT_COMMITTER_NAME: semantic-release-bot
        GIT_COMMITTER_EMAIL: semantic-release-bot@martynus.net
      run: |
        npx semantic-release
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Check if new release was published
      id: released
      run: |
        if [ "${{ steps.before.outputs.version }}" != "${{ steps.release.outputs.version }}" ]; then
          echo "new_release_published=true" >> $GITHUB_OUTPUT
          echo "version=${{ steps.release.outputs.version }}" >> $GITHUB_OUTPUT
          echo "New release published: ${{ steps.release.outputs.version }}"
        else
          echo "new_release_published=false" >> $GITHUB_OUTPUT
          echo "No new release published"
        fi
     
    - name: Set up JDK 21
      if: steps.released.outputs.new_release_published == 'true'
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: 'trouvaille-back/pom.xml'

    - name: Set up Docker Buildx
      if: steps.released.outputs.new_release_published == 'true'
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      if: steps.released.outputs.new_release_published == 'true'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker images
      if: steps.released.outputs.new_release_published == 'true'
      run: |
        TAG=${{ steps.released.outputs.version }}
        ./build.sh ${TAG} jvm
        
        # Tag images for GitHub Container Registry
        docker tag ghcr.io/${{ github.repository_owner }}/trouvaille-backend:${TAG} ghcr.io/${{ github.repository_owner }}/trouvaille-backend:latest
        docker tag ghcr.io/${{ github.repository_owner }}/trouvaille-frontend:${TAG} ghcr.io/${{ github.repository_owner }}/trouvaille-frontend:latest
        
        # Push images
        docker push ghcr.io/${{ github.repository_owner }}/trouvaille-backend:${TAG}
        docker push ghcr.io/${{ github.repository_owner }}/trouvaille-frontend:${TAG}
        docker push ghcr.io/${{ github.repository_owner }}/trouvaille-backend:latest
        docker push ghcr.io/${{ github.repository_owner }}/trouvaille-frontend:latest
