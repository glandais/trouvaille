#%dev.quarkus.log.level=DEBUG

%dev.trouvaille.base-path=../data
trouvaille.base-path=${DATA_BASE_PATH}

quarkus.openapi.generator.spec=contract.yaml
quarkus.openapi.generator.base-package=io.github.glandais.trouvaille.openapi

quarkus.mongodb.database=trouvaille
%dev.quarkus.mongodb.connection-string=mongodb://localhost:27017
quarkus.liquibase-mongodb.migrate-at-start=true

# Configuration CORS
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost:5174
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

quarkus.http.proxy.proxy-address-forwarding=true
quarkus.http.proxy.allow-forwarded=true
quarkus.http.proxy.enable-forwarded-host=true
quarkus.http.proxy.enable-forwarded-prefix=true

# Configuration JWT pour la validation des tokens g�n�r�s par notre backend
mp.jwt.verify.publickey.location=${trouvaille.base-path}/keys/publicKey.pem
mp.jwt.verify.issuer=trouvaille
quarkus.smallrye-jwt.enabled=true

# Configuration JWT
smallrye.jwt.sign.key.location=${trouvaille.base-path}/keys/privateKey.pem
smallrye.jwt.new-token.lifespan=86400
smallrye.jwt.new-token.issuer=trouvaille

# Configuration OAuth2
trouvaille.oauth.client-id=${OAUTH_CLIENT_ID}
trouvaille.oauth.client-secret=${OAUTH_CLIENT_SECRET}

# Configuration REST Client
quarkus.rest-client.oauth2.url=${OAUTH_BASE_URL}

# Configuration du stockage des photos
%dev.trouvaille.photos.storage-path=./data/photos
trouvaille.photos.storage-path=${trouvaille.base-path}/photos

trouvaille.front.authorize-uri=${OAUTH_BASE_URL}/oauth/authorize
trouvaille.front.client-id=${OAUTH_CLIENT_ID}
