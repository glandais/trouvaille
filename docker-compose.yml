version: '3.8'

services:
  # Reverse proxy
  traefik:
    image: traefik:v3.1
    container_name: trouvaille-traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
      - "--accesslog=true"
    ports:
      - "${HTTP_PORT:-8090}:80"        # HTTP configurable (default 8090)
      - "127.0.0.1:28080:8080"  # Dashboard (localhost only)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"

  # MongoDB
  mongodb:
    image: mongo:8.0.10
    container_name: trouvaille-mongodb
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - "${MONGO_HOST_DATA}:/data/db"
    ports:
      - "127.0.0.1:${MONGO_HOST_PORT}:27017"    # MongoDB (localhost only)
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    # Add resource limits
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  # Backend Quarkus
  backend:
    image: trouvaille/backend:latest
    container_name: trouvaille-backend
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - "./data/photos:/opt/trouvaille/data/photos"
      - "./data/keys:/opt/trouvaille/data/keys"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.quarkus.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.quarkus.priority=100"
      - "traefik.http.services.quarkus.loadbalancer.server.port=8080"

  # Frontend Vue.js
  frontend:
    image: trouvaille/frontend:latest
    container_name: trouvaille-frontend
    restart: unless-stopped
    depends_on:
      - backend
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.priority=1"
