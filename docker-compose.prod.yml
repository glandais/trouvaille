# Docker Compose override for production
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  traefik:
    command:
      - "--api.dashboard=false"           # Disable dashboard in production
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=WARN"               # Reduce log verbosity
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
    ports:
      - "${HTTP_PORT:-8090}:80"           # HTTP only, configurable port
      # Dashboard not exposed in production
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_logs:/var/log/traefik     # Log volume for monitoring
    labels:
      # Remove dashboard labels for security
      - "traefik.enable=false"

  mongodb:
    # Remove port exposure in production
    ports: []
    environment:
      # Use stronger credentials from .env file
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    # Add resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  backend:
    environment:
      # Production database connection with credentials from .env
      QUARKUS_MONGODB_CONNECTION_STRING: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/trouvaille?authSource=admin
      
      # Production OAuth configuration
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET}
      OAUTH_REDIRECT_URI: ${OAUTH_REDIRECT_URI:-http://localhost:8090}/oauth/callback
      
      # Production settings
      QUARKUS_LOG_LEVEL: INFO
      QUARKUS_HTTP_ACCESS_LOG_ENABLED: true
      
      # Security headers
      QUARKUS_HTTP_CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost}
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Production volumes with specific drivers and options
volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/trouvaille/data/mongodb
  
  photos_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/trouvaille/data/photos
  
  jwt_keys:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/trouvaille/data/keys

  traefik_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/trouvaille/logs/traefik