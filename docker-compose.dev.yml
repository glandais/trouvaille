# Docker Compose override for development
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  # Expose additional ports for development/debugging
  backend:
    ports:
      - "127.0.0.1:8081:8080"      # Backend direct access (localhost only)
    environment:
      # Development specific settings
      QUARKUS_LOG_LEVEL: DEBUG
      QUARKUS_LIQUIBASE_MIGRATE_AT_START: true
      QUARKUS_DEV_SERVICES_ENABLED: false
    # Override for faster development builds (JVM mode)
    # image: trouvaille/backend:latest-jvm

  frontend:
    ports:
      - "127.0.0.1:8082:80"        # Frontend direct access (localhost only)

  mongodb:
    # MongoDB exposed on default port for development tools
    ports:
      - "127.0.0.1:27017:27017"    # Already set in main compose

  # Development tools
  mongo-express:
    image: mongo-express:latest
    container_name: trouvaille-mongo-express
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "127.0.0.1:8083:8081"      # Mongo Express (localhost only)
    networks:
      - trouvaille-network

  # Optional: Adminer for database administration
  adminer:
    image: adminer:latest
    container_name: trouvaille-adminer
    restart: unless-stopped
    ports:
      - "127.0.0.1:8084:8080"      # Adminer (localhost only)
    networks:
      - trouvaille-network
    environment:
      ADMINER_DEFAULT_SERVER: mongodb